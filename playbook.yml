- hosts: localhost
  become: yes
  vars:
    ansible_python_interpreter: /home/ubuntu/k8s-ansible-venv/bin/python
    docker_tag: "v4.0"
    container_name: "abctechnologies_ansible"
    image_name: "mahshamim/abstechnologies_ansible"
    docker_username: "mahshamim"
    docker_password: "01614747054@R!f"
    kubeconfig_path: ~/.kube/config
    deployment_file: deployment.yml
    service_file: service.yaml
    namespace: "abc-technologies-ansible"
  tasks:
    - name: Install required Python packages in the virtual environment
      ansible.builtin.pip:
        name:
          - kubernetes
          - packaging
        virtualenv: /home/ubuntu/k8s-ansible-venv

    - name: Check Python Kubernetes module
      ansible.builtin.command: /home/ubuntu/k8s-ansible-venv/bin/python -c "import kubernetes"

    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present
      register: docker_installed

    - name: Start Docker Service
      service:
        name: docker
        state: started
        enabled: true
      when: docker_installed.changed

    - name: Build WAR file using Maven (if applicable)
      command: mvn clean package
      args:
        chdir: ./
      when: docker_installed.rc == 0

    - name: Build Docker Image
      command: docker build -t {{ image_name }} .

    - name: Remove existing Docker container if running
      docker_container:
        name: "{{ container_name }}"
        state: absent
      ignore_errors: true

    - name: Run Docker Container
      docker_container:
        name: "{{ container_name }}"
        image: "{{ image_name }}"
        state: started
        published_ports:
          - "9292:8080"

    - name: Log in to Docker Hub using Ansible's Docker login
      community.docker.docker_login:
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"
        reauthorize: yes

    - name: Tag Docker image for Docker Hub
      command: docker tag {{ image_name }} "{{ image_name }}:{{ docker_tag }}"

    - name: Push Docker image to Docker Hub
      command: docker push "{{ image_name }}:{{ docker_tag }}"

    - name: Ensure Kubernetes namespace exists
      kubernetes.core.k8s:
        name: "{{ namespace }}"
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: v1
        kind: Namespace

    - name: Apply Kubernetes Deployment
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        definition: "{{ lookup('file', deployment_file) }}"
        namespace: "{{ namespace }}"

    - name: Apply Kubernetes Service
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        definition: "{{ lookup('file', service_file) }}"
        namespace: "{{ namespace }}"
